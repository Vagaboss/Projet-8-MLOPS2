name: 🚀 CI/CD - Build, Test & Deploy to HF Spaces

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Récupérer le code source
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      # 2. Installer Python
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3. Installer les dépendances
      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # 4. Lancer les tests
      - name: ✅ Run tests
        run: pytest tests/

      # 5. Construire l'image Docker
      - name: 🐳 Build Docker image
        run: docker build -t gradio-scoring-app .

      # 6. Configurer Git pour le push
      - name: ⚙️ Setup Git config
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          git remote add hf https://$HF_TOKEN@huggingface.co/spaces/yacineould/credit-scoring-app || true

          # Initialiser LFS et forcer le tracking des .pkl
          git lfs install
          git lfs track "*.pkl"
          git add .gitattributes

          # Forcer la conversion du modèle en fichier LFS
          git rm --cached models/best_model.pkl || true
          git add models/best_model.pkl

          # Commit LFS s’il y a des modifs
          git commit -m "✅ Track best_model.pkl via Git LFS" || echo "Rien à committer"

          # Sauvegarde temporaire des changements pour permettre le pull
          git stash
          git pull hf main --rebase || echo "Pull skipping (peut-être vide)"
          git stash pop || true

          # Dernier commit et push
          git add .
          git commit -m "🚀 Déploiement automatique via GitHub Actions" || echo "Rien à committer"
          git push hf main
      
          